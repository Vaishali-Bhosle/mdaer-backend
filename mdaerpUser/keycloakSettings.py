"""
Django settings for manage_family project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os

import logging

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(_file_).resolve().parent.parent

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {funcName}({lineno}): {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',  # Adjust the log level as needed (DEBUG, INFO, WARNING, ERROR, CRITICAL)
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',  # Use the 'verbose' formatter
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
}

logger = logging.getLogger(__name__)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@ss0twf$a14!#3*fwzg1o)y!vwq&1i7t&twogzmuq5h48=okbc'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'managefamily.apps.ManagefamilyConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'drf_yasg',
    'rest_framework',

]

MIDDLEWARE = [
    'managefamily.auth_middleware.AuthMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',

]

KEYCLOAK_CONFIG = {
    'KEYCLOAK_REALM': os.environ.get('KEYCLOAK_REALM'),
    'KEYCLOAK_CLIENT_ID': os.environ.get('KEYCLOAK_CLIENT_ID'),
    'KEYCLOAK_SERVER_URL': os.environ.get('KEYCLOAK_SERVER_URL'),
    'KEYCLOAK_CLIENT_SECRET_KEY': os.environ.get('KEYCLOAK_CLIENT_SECRET_KEY'),
    'EXCLUDE_PATH': ['register_member','member-signup-gen-otp','member-signup-verify-otp','member-signin-gen-otp',
                     'member-signin-verify-otp','member-signin-member-id-gen-otp','member-signin-member-id-verify-otp',
                     'token-refresh','member-signup-mobile-gen-otp','member-signup-mobile-verify-otp','map-image','playground','docs',
                     'dd-occupation','dd-secondary-occupation', 'dd-relation', 'dd-education', 'dd-state','auto-state','dd-district', 'dd-marital',
                     'dd-department-name', 'dd-disability-type', 'dd-member-type', 'dd-gender','dd-record-status', 'dd-family-type', 
                     'dd-yes-no', 'dd-status', 'dd-scheme-status', 'dd-area', 'dd-caste', 'dd-divyang-percentage', 'dd-immovable', 
                     'dd-divyang', 'dd-application', 'dd-bank-name', 'dd-ticket-category', 'dd-ticket-sub-category', 'dd-eligibility-status', 'dd-application-process', 
                     'dd-grievance-status', 'dd-bpl-status','dd-benefit-type','dd-benefit-frequency','dd-domicile','dd-scheme-category'],
    'KEYCLOAK_TEST_ADMIN_USER' : os.environ.get('KEYCLOAK_TEST_ADMIN_USER'),
    'KEYCLOAK_TEST_ADMIN_PASSWORD' : os.environ.get('KEYCLOAK_TEST_ADMIN_PASSWORD')
}

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication'
    ],
}

ROOT_URLCONF = 'manage_family.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'manage_family.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

print({
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRESQL_NAME'),
        'USER': os.environ.get('POSTGRESQL_USER'),
        'PASSWORD': os.environ.get('POSTGRESQL_PASSWORD'),
        'HOST': os.environ.get('POSTGRESQL_HOST'),
        'PORT': os.environ.get('POSTGRESQL_PORT')
    })

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRESQL_NAME'),
        'USER': os.environ.get('POSTGRESQL_USER'),
        'PASSWORD': os.environ.get('POSTGRESQL_PASSWORD'),
        'HOST': os.environ.get('POSTGRESQL_HOST'),
        'PORT': os.environ.get('POSTGRESQL_PORT')
    }
}

logger.info(f"Using postgresql in {os.environ.get('POSTGRESQL_HOST')}")


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/MANAGE_FAMILY/media/'

MEDIA_ROOT = os.path.join(BASE_DIR,'media')

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)

CORS_ALLOW_HEADERS = (
    'Access-Control-Allow-Origin',
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'token'
)