# Generated by Django 5.0.6 on 2025-03-24 09:41

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='profile_url',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('brand_name', models.CharField(blank=True, max_length=100, null=True)),
                ('model_number', models.CharField(blank=True, max_length=50, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('catalog_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('device_category', models.CharField(choices=[('diagnostic', 'Diagnostic'), ('therapeutic', 'Therapeutic'), ('life_support', 'Life Support'), ('surgical', 'Surgical'), ('monitoring', 'Monitoring'), ('implantable', 'Implantable'), ('consumable', 'Consumable'), ('ppe', 'PPE'), ('other', 'Other')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('intended_use', models.TextField(blank=True, null=True)),
                ('approval_number', models.CharField(blank=True, max_length=50, null=True)),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('is_implantable', models.BooleanField(default=False)),
                ('is_single_use', models.BooleanField(default=False)),
                ('faulty_components', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manufacturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='manufactured_devices', to='user.organization')),
            ],
            options={
                'db_table': 'devices',
            },
        ),
        migrations.CreateModel(
            name='AdverseEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('reference_number', models.CharField(max_length=20, unique=True)),
                ('event_date', models.DateTimeField()),
                ('report_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('event_location', models.CharField(blank=True, max_length=200, null=True)),
                ('severity', models.CharField(choices=[('minor', 'Minor'), ('moderate', 'Moderate'), ('serious', 'Serious'), ('life_threatening', 'Life Threatening'), ('death', 'Death')], max_length=50)),
                ('description', models.TextField()),
                ('patient_outcome', models.TextField(blank=True, null=True)),
                ('immediate_action', models.TextField(blank=True, null=True)),
                ('device_usage_purpose', models.TextField(blank=True, null=True)),
                ('device_operation_status', models.CharField(blank=True, max_length=50, null=True)),
                ('device_available_for_evaluation', models.BooleanField(default=False)),
                ('device_returned_to_manufacturer', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('information_requested', 'Information Requested'), ('investigation', 'Investigation'), ('closed', 'Closed'), ('escalated', 'Escalated')], default='submitted', max_length=50)),
                ('patient_age', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('patient_gender', models.CharField(blank=True, max_length=20, null=True)),
                ('patient_weight', models.FloatField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.organization')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='adverse_events', to='user.user')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='adverse_events', to='user.device')),
            ],
            options={
                'db_table': 'adverse_events',
            },
        ),
        migrations.CreateModel(
            name='EventAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('file_path', models.CharField(max_length=255)),
                ('file_type', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('adverse_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='user.adverseevent')),
            ],
            options={
                'db_table': 'event_attachments',
            },
        ),
        migrations.CreateModel(
            name='EventFollowUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('follow_up_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('adverse_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_ups', to='user.adverseevent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='user.user')),
            ],
            options={
                'db_table': 'event_follow_ups',
            },
        ),
        migrations.CreateModel(
            name='EventReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('review_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('assessment', models.TextField()),
                ('action_required', models.TextField(blank=True, null=True)),
                ('risk_level', models.CharField(blank=True, max_length=20, null=True)),
                ('conclusion', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('adverse_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='user.adverseevent')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reviews', to='user.user')),
            ],
            options={
                'db_table': 'event_reviews',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('external_link', models.URLField(blank=True, null=True)),
                ('notification_type', models.CharField(max_length=50)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('related_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.adverseevent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
            options={
                'db_table': 'notifications',
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
            options={
                'db_table': 'otps',
            },
        ),
        migrations.CreateModel(
            name='RegulatoryAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('action_type', models.CharField(max_length=50)),
                ('action_date', models.DateTimeField()),
                ('description', models.TextField()),
                ('regulatory_body', models.CharField(max_length=100)),
                ('reference_number', models.CharField(blank=True, max_length=50, null=True)),
                ('action_status', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='user.device')),
            ],
            options={
                'db_table': 'regulatory_actions',
            },
        ),
        migrations.AddConstraint(
            model_name='device',
            constraint=models.UniqueConstraint(fields=('manufacturer', 'model_number', 'serial_number'), name='unique_device_constraint'),
        ),
        migrations.AddIndex(
            model_name='adverseevent',
            index=models.Index(fields=['severity'], name='adverse_eve_severit_0def71_idx'),
        ),
        migrations.AddIndex(
            model_name='adverseevent',
            index=models.Index(fields=['status'], name='adverse_eve_status_e86860_idx'),
        ),
        migrations.AddIndex(
            model_name='adverseevent',
            index=models.Index(fields=['event_date'], name='adverse_eve_event_d_f6483d_idx'),
        ),
        migrations.AddIndex(
            model_name='adverseevent',
            index=models.Index(fields=['report_date'], name='adverse_eve_report__a6a6f4_idx'),
        ),
    ]
